name: Publish Windy Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      ACTIONS_RUNNER_DEBUG: 'true'
      ACTIONS_STEP_DEBUG: 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build plugin
        run: |
          npm run build
          if [ $? -ne 0 ]; then
            echo "Build failed!"
            exit 1
          fi

      - name: Update plugin metadata
        run: npm run update:metadata

      - name: Create plugin archive
        run: |
          tar cf windy-plugin-heat-units.tar --exclude='./windy-plugin-heat-units.tar' --exclude='.git' --exclude='node_modules' .
          if [ $? -ne 0 ]; then
            echo "Archive creation failed!"
            exit 1
          fi
          # Verify archive was created and has content
          if [ ! -f windy-plugin-heat-units.tar ]; then
            echo "Archive file was not created!"
            exit 1
          fi
          archive_size=$(stat -c%s windy-plugin-heat-units.tar)
          if [ "$archive_size" -lt 1000 ]; then
            echo "Archive seems too small (${archive_size} bytes), something went wrong!"
            exit 1
          fi
          echo "Archive created successfully (${archive_size} bytes)"

      - name: Publish to Windy (Main branch only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          WINDY_API_KEY: ${{ secrets.WINDY_API_KEY }}
        run: |
          # Check if API key is set
          if [ -z "$WINDY_API_KEY" ]; then
            echo "Error: WINDY_API_KEY is not set in repository secrets!"
            exit 1
          fi

          # Upload with better error handling
          echo "Uploading plugin to Windy..."
          set -x
          set +e
          response=$(curl -v -L -w "%{http_code}" -o response.json --fail-with-body \
            -XPOST 'https://node.windy.com/plugins/v1.0/upload' \
            -H "x-windy-api-key: $WINDY_API_KEY" \
            -F 'plugin_archive=@./windy-plugin-heat-units.tar')
          curl_exit=$?
          set -e
          http_code="${response: -3}"
          echo "HTTP Status Code: $http_code"
          echo "curl exit code: $curl_exit"

          # Show response body if available
          if [ -f response.json ]; then
            echo "Response body:"
            cat response.json
          fi

          # Detect proxy blocking
          if [ "$http_code" = "403" ]; then
            if [ -f response.json ]; then
              if grep -q "Method forbidden" response.json; then
                echo "Upload blocked by network policy. Please run from an allowed environment."
                exit 1
              fi
            else
              echo "Error: response.json not found. Unable to check for proxy blocking."
              exit 1
            fi
          fi

          # Warn if endpoint disappeared
          if [ "$http_code" = "404" ] || [ "$http_code" = "410" ]; then
            echo "Upload endpoint not found (HTTP $http_code). The Windy API might have changed."
            echo "Please verify the plugin upload URL in the documentation: https://docs.windy-plugins.com/"
            exit 1
          fi

          # Check if upload was successful
          if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 300 ]; then
            echo "‚úÖ Plugin uploaded successfully!"
            plugin_name=$(jq -r '.name' plugin.json)
            plugin_url="https://windy-plugins.com/plugins/${plugin_name}/plugin.json"
            echo "Plugin URL: $plugin_url"
          else
            echo "‚ùå Upload failed with HTTP $http_code"
            exit 1
          fi

      - name: Build summary (PR only)
        if: github.event_name == 'pull_request'
        run: |
          echo "üîç This is a pull request - plugin was built but not published"
          echo "üì¶ Archive size: $(stat -c%s windy-plugin-heat-units.tar) bytes"
          echo "üöÄ Plugin will be published when merged to main branch"
          plugin_name=$(jq -r '.name' plugin.json)
          echo "‚ÑπÔ∏è Expected URL after publish: https://windy-plugins.com/plugins/${plugin_name}/plugin.json"
